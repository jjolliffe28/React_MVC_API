{"ast":null,"code":"var _jsxFileName = \"/Users/jackjolliffe/Desktop/source/repos/Ract_API_MVC - Jack Copy/src/Controllers/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport HomeIndex from '../Views/HomeIndex';\nimport Player from '../Models/Player';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const requestURI = 'https://localhost:7172/api/Football/';\n  var idx = null;\n  var id = null;\n  const [refresh, setRefresh] = useState(() => false);\n  var [data, setData] = useState(() => []);\n  var player = new Player();\n  var players = data;\n  var showEdit = false;\n  var showCreate = false;\n\n  //GET\n  useEffect(() => {\n    fetch(requestURI).then(response => response.json()).then(data => {\n      setData(data);\n      setRefresh(false);\n    });\n  }, [refresh]);\n\n  //PUT\n  var PutData = (dataObj, id) => {\n    fetch(requestURI + id, {\n      method: 'PUT',\n      body: JSON.stringify(dataObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => {\n      if (response.status !== 204) {\n        console.log('PUT Failed', response);\n        return;\n      } else {\n        console.log('PUT Succeeded', response);\n      }\n    });\n  };\n\n  //POST\n  function PostData(dataObj) {\n    fetch(requestURI, {\n      method: 'POST',\n      body: JSON.stringify(dataObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => {\n      if (response.status !== 201) {\n        console.log('POST Failed', response);\n        return;\n      } else {\n        setRefresh(true);\n      }\n    });\n  }\n\n  // console.log('players is ', players);\n  var selection = [idx, id, player, players, showEdit, showCreate, PutData, PostData];\n  return /*#__PURE__*/_jsxDEV(HomeIndex, {\n    data: selection\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"YsG8tTZEZGqEvSDqjMZJZvcvP3g=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","HomeIndex","Player","App","requestURI","idx","id","refresh","setRefresh","data","setData","player","players","showEdit","showCreate","fetch","then","response","json","PutData","dataObj","method","body","JSON","stringify","headers","status","console","log","PostData","selection"],"sources":["/Users/jackjolliffe/Desktop/source/repos/Ract_API_MVC - Jack Copy/src/Controllers/App.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport HomeIndex from '../Views/HomeIndex';\nimport Player from '../Models/Player';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nexport default function App() {\n  const requestURI = 'https://localhost:7172/api/Football/';\n\n  var idx = null;\n  var id = null;\n  const [refresh, setRefresh] = useState(() => false);\n  var [data, setData] = useState (() => []);\n  var player = new Player();\n  var players = data;\n  var showEdit = false;\n  var showCreate = false;\n\n  //GET\n  useEffect(() => {\n    fetch(requestURI)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n        setRefresh(false);\n      });\n  }, [refresh]);\n\n  //PUT\n  var PutData = (dataObj, id) => {\n    fetch(requestURI + id, {\n      method: 'PUT',\n      body: JSON.stringify(dataObj),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    }).then((response) => {\n      if (response.status !== 204) {\n        console.log('PUT Failed', response);\n        return;\n      } else {\n        console.log('PUT Succeeded', response);\n      }\n    });\n  };\n\n  //POST\n  function PostData(dataObj) {\n    fetch(requestURI, {\n      method: 'POST',\n      body: JSON.stringify(dataObj),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    }).then((response) => {\n      if (response.status !== 201) {\n        console.log('POST Failed', response);\n        return;\n      } else {\n        setRefresh(true);\n      }\n    });\n  }\n\n  // console.log('players is ', players);\n  var selection = [\n    idx,\n    id,\n    player,\n    players,\n    showEdit,\n    showCreate,\n    PutData,\n    PostData,\n  ];\n  \n  return <HomeIndex data={selection} />;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,kBAAkB;AAErC,OAAO,kCAAkC;AAAC;AAI1C,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAMC,UAAU,GAAG,sCAAsC;EAEzD,IAAIC,GAAG,GAAG,IAAI;EACd,IAAIC,EAAE,GAAG,IAAI;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,MAAM,KAAK,CAAC;EACnD,IAAI,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAE,MAAM,EAAE,CAAC;EACzC,IAAIY,MAAM,GAAG,IAAIT,MAAM,EAAE;EACzB,IAAIU,OAAO,GAAGH,IAAI;EAClB,IAAII,QAAQ,GAAG,KAAK;EACpB,IAAIC,UAAU,GAAG,KAAK;;EAEtB;EACAd,SAAS,CAAC,MAAM;IACde,KAAK,CAACX,UAAU,CAAC,CACdY,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEP,IAAI,IAAK;MACdC,OAAO,CAACD,IAAI,CAAC;MACbD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;;EAEb;EACA,IAAIY,OAAO,GAAG,CAACC,OAAO,EAAEd,EAAE,KAAK;IAC7BS,KAAK,CAACX,UAAU,GAAGE,EAAE,EAAE;MACrBe,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkC;IAC/D,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAK;MACpB,IAAIA,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEX,QAAQ,CAAC;QACnC;MACF,CAAC,MAAM;QACLU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,QAAQ,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,SAASY,QAAQ,CAACT,OAAO,EAAE;IACzBL,KAAK,CAACX,UAAU,EAAE;MAChBiB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAAC;MAC7BK,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkC;IAC/D,CAAC,CAAC,CAACT,IAAI,CAAEC,QAAQ,IAAK;MACpB,IAAIA,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEX,QAAQ,CAAC;QACpC;MACF,CAAC,MAAM;QACLT,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIsB,SAAS,GAAG,CACdzB,GAAG,EACHC,EAAE,EACFK,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVK,OAAO,EACPU,QAAQ,CACT;EAED,oBAAO,QAAC,SAAS;IAAC,IAAI,EAAEC;EAAU;IAAA;IAAA;IAAA;EAAA,QAAG;AACvC;AAAC,GAnEuB3B,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}